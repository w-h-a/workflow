services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management
    ports:
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  postgres:
    container_name: postgres
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=tasks
      - POSTGRES_PASSWORD=tasks
      - POSTGRES_DB=tasks
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tasks"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  worker:
    container_name: worker
    build: .
    command: engine
    ports:
      - "4001:4001"
    environment:
      - ENV=dev
      - NAME=worker
      - VERSION=0.1.0-alpha.0
      - MODE=worker
      - HTTP_ADDRESS=:4001
      - BROKER=rabbit
      - BROKER_LOCATION=amqp://guest:guest@rabbitmq:5672
      - RUNNER=docker
      - RUNNER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      rabbitmq:
        condition: service_healthy

  coordinator:
    container_name: coordinator
    build: .
    command: engine
    ports:
      - "4000:4000"
    environment:
      - ENV=dev
      - NAME=coordinator
      - VERSION=0.1.0-alpha.0
      - MODE=coordinator
      - HTTP_ADDRESS=:4000
      - BROKER=rabbit
      - BROKER_LOCATION=amqp://guest:guest@rabbitmq:5672
      - READ_WRITER=postgres
      - READ_WRITER_LOCATION=postgres://tasks:tasks@postgres:5432/tasks?sslmode=disable
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
