services:
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.62.0
    ports:
      - '16686:16686'
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:16686/"] # Updated command
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v3.0.0
    command: 
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.enable-otlp-receiver"
      - "--web.enable-remote-write-receiver"
      - "--enable-feature=remote-write-receiver"
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:9090/metrics"] # Updated command
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management
    ports:
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  postgres:
    container_name: postgres
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=tasks
      - POSTGRES_PASSWORD=tasks
      - POSTGRES_DB=tasks
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tasks"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  streamer:
    container_name: streamer
    build: .
    command: engine
    ports:
      - "4002:4002"
    environment:
      - ENV=dev
      - NAME=streamer
      - VERSION=0.1.0-alpha.0
      - MODE=streamer
      - HTTP_ADDRESS=:4002
      - TRACES_ADDRESS=jaeger:4318
      - METRICS_ADDRESS=prometheus:9090
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://prometheus:9090/api/v1/otlp/v1/metrics
      - BROKER=rabbit
      - BROKER_LOCATION=amqp://guest:guest@rabbitmq:5672
    depends_on:
      jaeger:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  worker:
    container_name: worker
    build: .
    command: engine
    ports:
      - "4001:4001"
    environment:
      - ENV=dev
      - NAME=worker
      - VERSION=0.1.0-alpha.0
      - MODE=worker
      - HTTP_ADDRESS=:4001
      - TRACES_ADDRESS=jaeger:4318
      - METRICS_ADDRESS=prometheus:9090
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://prometheus:9090/api/v1/otlp/v1/metrics
      - BROKER=rabbit
      - BROKER_LOCATION=amqp://guest:guest@rabbitmq:5672
      - RUNNER=docker
      - RUNNER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      jaeger:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  coordinator:
    container_name: coordinator
    build: .
    command: engine
    ports:
      - "4000:4000"
    environment:
      - ENV=dev
      - NAME=coordinator
      - VERSION=0.1.0-alpha.0
      - MODE=coordinator
      - HTTP_ADDRESS=:4000
      - TRACES_ADDRESS=jaeger:4318
      - METRICS_ADDRESS=prometheus:9090
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://prometheus:9090/api/v1/otlp/v1/metrics
      - BROKER=rabbit
      - BROKER_LOCATION=amqp://guest:guest@rabbitmq:5672
      - READ_WRITER=postgres
      - READ_WRITER_LOCATION=postgres://tasks:tasks@postgres:5432/tasks?sslmode=disable
    depends_on:
      jaeger:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
